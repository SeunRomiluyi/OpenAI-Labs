{"request": {"user_nl": "What are the top 10 products sold by category?", "session": [], "complementary_data": {"CleanRecordId": "00000000-0000-0000-0000-000000000003", "NLPrompt": "What are the top 10 products sold by category?", "Completion": "Sales | summarize sum(Quantity) by Product, Category | top 10 by sum_Quantity", "CleanedBy": "cleaning", "CleanedTime": "2022-11-01T10:56:03.6472747", "Tags": "nl2kql,minimal_data", "Labels": "pandas,dataframe,csv", "SessionId": "00000000-0000-0000-0000-000000000013", "Sequence": 1}, "expected_output": ["Sales | summarize sum(Quantity) by Product, Category | top 10 by sum_Quantity"]}, "state": {"component_data": {}, "context": ["The following file contains prompts and the corresponding kusto query statement code answering these prompts"], "completion_pairs": [["What is the total number of requests per day for the last 7 days, grouped by status and method, and sorted by count, and only showing the top 10, and only showing the count?", "requests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d), status, method | sort by count_ desc | top 10 | project count_"], ["What is the total number of requests per day?", "requests | summarize count() by bin(timestamp, 1d)"], ["What is the total number of requests per day for the last 7 days, grouped by status and method, and sorted by count, and only showing the top 10?", "requests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d), status, method | sort by count_ desc | top 10"]], "session": [], "user_nl": "What are the top 10 products sold by category?"}, "model_input": {"prompt": "/* The following file contains prompts and the corresponding kusto query statement code answering these prompts */\n\n// What is the total number of requests per day for the last 7 days, grouped by status and method, and sorted by count, and only showing the top 10, and only showing the count?\nrequests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d), status, method | sort by count_ desc | top 10 | project count_\n\n// What is the total number of requests per day?\nrequests | summarize count() by bin(timestamp, 1d)\n\n// What is the total number of requests per day for the last 7 days, grouped by status and method, and sorted by count, and only showing the top 10?\nrequests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d), status, method | sort by count_ desc | top 10\n\n/* Past requests */\n\n// What are the top 10 products sold by category?\n"}, "model_output": {"completions": ["eCommerce | top 10 by category\n\n"]}, "log": {}, "error": null, "experiment_metrics": {"nl2kql.components.evaluators.kql_syntax": {"non-empty": [1], "syntax-valid": [1]}, "nl2kql.components.evaluators.fuzzy": {"simple": [42], "partial": [59], "token_sort": [48], "token_set": [78]}, "nl2kql.components.evaluators.rouge": {"rouge1_precision": [0.8], "rouge1_recall": [0.3333333333333333], "rouge1_fmeasure": [0.47058823529411764], "rougeL_precision": [0.6], "rougeL_recall": [0.25], "rougeL_fmeasure": [0.35294117647058826]}, "nl2kql.components.evaluators.exact_match": {"exact_match": [0]}}}
{"request": {"user_nl": "What is the average response time?", "session": [], "complementary_data": {"CleanRecordId": "00000000-0000-0000-0000-000000000003", "NLPrompt": "What is the average response time?", "Completion": ".avg(responseTime) | where timestamp > ago(1h)", "dependentInput": "What is the total number of requests by country?", "CleanedBy": "cleaning", "CleanedTime": "2022-11-01T10:56:03.6472747", "Tags": "nl2kql,minimal_data", "Labels": "pandas,dataframe,csv", "SessionId": "00000000-0000-0000-0000-000000000013", "Sequence": 1}, "expected_output": [".avg(responseTime) | where timestamp > ago(1h)"]}, "state": {"component_data": {}, "context": ["The following file contains prompts and the corresponding kusto query statement code answering these prompts"], "completion_pairs": [["What is the total number of requests per day for the last 7 days, grouped by status?", "requests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d), status"], ["What is the total number of requests per day for the last 7 days?", "requests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d)"], ["What is the total number of requests per day?", "requests | summarize count() by bin(timestamp, 1d)"]], "session": [], "user_nl": "What is the average response time?"}, "model_input": {"prompt": "/* The following file contains prompts and the corresponding kusto query statement code answering these prompts */\n\n// What is the total number of requests per day for the last 7 days, grouped by status?\nrequests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d), status\n\n// What is the total number of requests per day for the last 7 days?\nrequests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d)\n\n// What is the total number of requests per day?\nrequests | summarize count() by bin(timestamp, 1d)\n\n/* Past requests */\n\n// What is the average response time?\n"}, "model_output": {"completions": ["requests | summarize avg(responseLength)\n\n"]}, "log": {}, "error": null, "experiment_metrics": {"nl2kql.components.evaluators.kql_syntax": {"non-empty": [1], "syntax-valid": [1]}, "nl2kql.components.evaluators.fuzzy": {"simple": [36], "partial": [38], "token_sort": [47], "token_set": [50]}, "nl2kql.components.evaluators.rouge": {"rouge1_precision": [0.25], "rouge1_recall": [0.16666666666666666], "rouge1_fmeasure": [0.2], "rougeL_precision": [0.25], "rougeL_recall": [0.16666666666666666], "rougeL_fmeasure": [0.2]}, "nl2kql.components.evaluators.exact_match": {"exact_match": [0]}}}
{"request": {"user_nl": "What is the total number of requests by country?", "session": [], "complementary_data": {"CleanRecordId": "00000000-0000-0000-0000-000000000003", "NLPrompt": "What is the total number of requests by country?", "Completion": ".count | summarize count() by country | where timestamp > ago(1h)", "CleanedBy": "cleaning", "CleanedTime": "2022-11-01T10:56:03.6472747", "Tags": "nl2kql,minimal_data", "Labels": "pandas,dataframe,csv", "SessionId": "00000000-0000-0000-0000-000000000013", "Sequence": 1}, "expected_output": [".count | summarize count() by country | where timestamp > ago(1h)"]}, "state": {"component_data": {}, "context": ["The following file contains prompts and the corresponding kusto query statement code answering these prompts"], "completion_pairs": [["What is the total number of requests per day for the last 7 days, grouped by status?", "requests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d), status"], ["What is the total number of requests per day for the last 7 days?", "requests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d)"], ["What is the total number of requests per day?", "requests | summarize count() by bin(timestamp, 1d)"]], "session": [], "user_nl": "What is the total number of requests by country?"}, "model_input": {"prompt": "/* The following file contains prompts and the corresponding kusto query statement code answering these prompts */\n\n// What is the total number of requests per day for the last 7 days, grouped by status?\nrequests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d), status\n\n// What is the total number of requests per day for the last 7 days?\nrequests | where timestamp > ago(7d) | summarize count() by bin(timestamp, 1d)\n\n// What is the total number of requests per day?\nrequests | summarize count() by bin(timestamp, 1d)\n\n/* Past requests */\n\n// What is the total number of requests by country?\n"}, "model_output": {"completions": ["requests | summarize count() by country_code\n\n"]}, "log": {}, "error": null, "experiment_metrics": {"nl2kql.components.evaluators.kql_syntax": {"non-empty": [1], "syntax-valid": [1]}, "nl2kql.components.evaluators.fuzzy": {"simple": [61], "partial": [74], "token_sort": [59], "token_set": [67]}, "nl2kql.components.evaluators.rouge": {"rouge1_precision": [0.6666666666666666], "rouge1_recall": [0.4444444444444444], "rouge1_fmeasure": [0.5333333333333333], "rougeL_precision": [0.6666666666666666], "rougeL_recall": [0.4444444444444444], "rougeL_fmeasure": [0.5333333333333333]}, "nl2kql.components.evaluators.exact_match": {"exact_match": [0]}}}
