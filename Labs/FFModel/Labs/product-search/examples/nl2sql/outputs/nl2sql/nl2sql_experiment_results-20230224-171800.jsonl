{"request": {"user_nl": "Find customer names", "session": [], "complementary_data": {"clean_record_id": "00000000-0000-0000-0000-000000000001", "nl_prompt": "Find customer names", "completion": "SELECT names FROM customers", "cleaned_by": "cleaning", "cleaned_time": "2022-11-01T10:43:03.6472747", "tags": "nl2sql,minimal_data", "labels": "select", "session_id": "00000000-0000-0000-0000-000000000011", "sequence": 1}, "expected_output": ["SELECT names FROM customers"]}, "state": {"component_data": {}, "context": ["This SQL Server database contains data on customers that we would like to query."], "completion_pairs": [], "session": [], "user_nl": "Find customer names"}, "model_input": {"prompt": "/*\nThis SQL Server database contains data on customers that we would like to query.\n*/\n-- Find customer names\n"}, "model_output": {"completions": ["SELECT FirstName, LastName\nFROM Customers\n\n"]}, "log": {}, "error": null, "experiment_metrics": {"nl2sql.components.evaluators.sql_syntax": {"non-empty": [1], "syntax-valid": [1]}}}
{"request": {"user_nl": "Give me the customers from Mexico", "session": [], "complementary_data": {"clean_record_id": "00000000-0000-0000-0000-000000000002", "nl_prompt": "Give me the customers from Mexico", "completion": "SELECT name FROM Customers WHERE Country='Mexico';", "cleaned_by": "cleaning", "cleaned_time": "2022-11-01T10:44:03.6472747", "tags": "nl2sql,minimal_data", "labels": "where", "session_id": "00000000-0000-0000-0000-000000000012", "sequence": 1}, "expected_output": ["SELECT name FROM Customers WHERE Country='Mexico';"]}, "state": {"component_data": {}, "context": ["This SQL Server database contains data on customers that we would like to query."], "completion_pairs": [], "session": [], "user_nl": "Give me the customers from Mexico"}, "model_input": {"prompt": "/*\nThis SQL Server database contains data on customers that we would like to query.\n*/\n-- Give me the customers from Mexico\n"}, "model_output": {"completions": ["SELECT * FROM customers WHERE country = 'Mexico';\n\n"]}, "log": {}, "error": null, "experiment_metrics": {"nl2sql.components.evaluators.sql_syntax": {"non-empty": [1], "syntax-valid": [1]}}}
{"request": {"user_nl": "What's the total price of the orders", "session": [], "complementary_data": {"clean_record_id": "00000000-0000-0000-0000-000000000003", "nl_prompt": "What's the total price of the orders", "completion": "SELECT SUM(price) FROM orders", "cleaned_by": "cleaning", "cleaned_time": "2022-11-01T10:45:03.6472747", "tags": "nl2sql,minimal_data", "labels": "sum", "session_id": "00000000-0000-0000-0000-000000000013", "sequence": 1}, "expected_output": ["SELECT SUM(price) FROM orders"]}, "state": {"component_data": {}, "context": ["This SQL Server database contains data on customers that we would like to query."], "completion_pairs": [], "session": [], "user_nl": "What's the total price of the orders"}, "model_input": {"prompt": "/*\nThis SQL Server database contains data on customers that we would like to query.\n*/\n-- What's the total price of the orders\n"}, "model_output": {"completions": ["SELECT SUM(TotalDue) AS TotalPrice\nFROM Sales.Sales"]}, "log": {}, "error": null, "experiment_metrics": {"nl2sql.components.evaluators.sql_syntax": {"non-empty": [1], "syntax-valid": [1]}}}
{"request": {"user_nl": "Count the countries we got orders from", "session": [], "complementary_data": {"clean_record_id": "00000000-0000-0000-0000-000000000004", "nl_prompt": "Count the countries we got orders from", "completion": "SELECT COUNT(DISTINCT Country) FROM Customers;", "cleaned_by": "cleaning", "cleaned_time": "2022-11-01T10:47:03.6472747", "tags": "nl2sql,minimal_data", "labels": "count,distinct", "session_id": "00000000-0000-0000-0000-000000000014", "sequence": 1}, "expected_output": ["SELECT COUNT(DISTINCT Country) FROM Customers;"]}, "state": {"component_data": {}, "context": ["This SQL Server database contains data on customers that we would like to query."], "completion_pairs": [], "session": [], "user_nl": "Count the countries we got orders from"}, "model_input": {"prompt": "/*\nThis SQL Server database contains data on customers that we would like to query.\n*/\n-- Count the countries we got orders from\n"}, "model_output": {"completions": ["SELECT COUNT(DISTINCT Country) AS Countries\nFROM"]}, "log": {}, "error": null, "experiment_metrics": {"nl2sql.components.evaluators.sql_syntax": {"non-empty": [1], "syntax-valid": [0]}}}
